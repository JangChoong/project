import time 

def user_touch_screen():
    print("사용자 → 무인 주문기: 화면 터치 및 메뉴 선택")
    time.sleep(2)

def kiosk_display_menu():
    print("무인 주문기 → 사용자: 선택한 메뉴 표시 및 결제 안내")
    time.sleep(2)

def user_make_payment():
    print("사용자 → 무인 주문기: 결제 진행 (카드/간편결제)")
    time.sleep(2)

def kiosk_send_to_system():
    print("무인 주문기 → 주문 처리 시스템: 주문 정보 및 결제 요청")
    time.sleep(2)

def system_payment_response():
    print("주문 처리 시스템 → 무인 주문기: 결제 성공 응답")
    time.sleep(2)

def kiosk_print_order_number():
    print("무인 주문기 → 사용자: 주문 번호 출력 및 안내")
    time.sleep(2)

def system_send_to_kitchen():
    print("주문 처리 시스템 → 주방: 조리 요청 (메뉴 정보 전달)")
    time.sleep(2)

def kitchen_prepare():
    print("주방 → 주문 처리 시스템: 조리 시작 및 준비 상태 전달")
    time.sleep(2)

def user_check_status():
    print("사용자 → 무인 주문기: (화면으로 주문 상태 확인)")
    time.sleep(2)


# 시뮬레이션 실행
def kiosk_simulation():
    print("=== 무인 주문기 시퀀스 시뮬레이션 시작 ===\n")
    user_touch_screen()
    kiosk_display_menu()
    user_make_payment()
    kiosk_send_to_system()
    system_payment_response()
    kiosk_print_order_number()
    system_send_to_kitchen()
    kitchen_prepare()
    user_check_status()
    print("\n=== 주문 프로세스 완료 ===")

# 실행
if __name__ == "__main__":
    kiosk_simulation()

# 구현 목적 : 시퀀스 다이어그램을 활용해 일상 생활속 소프트웨어 적용된 무인 주문기 키오스크의 흐름을 파이썬 코드로 표현
# 본 샘플 코드는 사용자-주문기-시스템 간의 상호작용을 단계별로 함수로 나누어 구현, 하나의 명확한 동작을 수행함으로써 응집도가 높고, 함수 간의 의존성이 없어서 결합도는 낮음
